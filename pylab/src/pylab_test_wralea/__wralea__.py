
# This file has been generated at Tue Mar 16 17:46:10 2010

from openalea.core import *


__name__ = 'openalea.pylab.test'

__editable__ = True
__description__ = 'pylab nodes.'
__license__ = 'CECILL-C'
__url__ = 'http://openalea.gforge.inria.fr/doc/openalea/pylab/doc/_build/html/contents.html'
__alias__ = []
__version__ = '0.8.0'
__authors__ = 'Thomas Cokelaer'
__institutes__ = 'INRIA/CIRAD'
__icon__ = 'icon.png'


__all__ = ['polar', 'plot', 'acorr', 'pie', 'boxplot', 'hist', 'scatter', 'loglog']



polar = CompositeNodeFactory(name='polar',
                             description='polar test',
                             category='data processing, visualization',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.pylab.nodes', 'PyLabPolar'),
   3: ('openalea.pylab.nodes', 'PyLabRandom'),
   5: ('openalea.pylab.nodes', 'PyLabRandom')},
                             elt_connections={163127244: (3, 0, 2, 0), 163127268: (5, 0, 2, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'PyLabPolar',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': -638.0,
         'posy': -1577.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'PyLabRandom',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': -715.0,
         'posy': -1678.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'PyLabRandom',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': -589.0,
         'posy': -1680.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'is_in_error_state': False,
                'is_user_application': False,
                'lazy': True,
                'port_hide_changed': set([]),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'is_in_error_state': False,
                 'is_user_application': False,
                 'lazy': True,
                 'port_hide_changed': set([]),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(2, '{}')],
   3: [(0, '100'), (1, '0.0'), (2, '1.0')],
   5: [(0, '100'), (1, '0.0'), (2, '1.0')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-638.0, -1577.0],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-715.0, -1678.0],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-589.0, -1680.0],
         'useUserColor': False,
         'userColor': None},
   '__in__': {'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             )




plot = CompositeNodeFactory(name='plot',
                             description='',
                             category='visualisation',
                             doc='',
                             inputs=(),
                             outputs=(),
                             elt_factory={},
                             elt_connections={},
                             elt_data={},
                             elt_value={},
                             elt_ad_hoc={},
                             lazy=True,
                             )




acorr = CompositeNodeFactory(name='acorr',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.pylab.nodes', 'PyLabRandom'),
   4: ('openalea.pylab.nodes', 'PyLabAcorr')},
                             elt_connections={142434276: (2, 0, 4, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'PyLabRandom',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': -226.0,
         'posy': 60.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'PyLabAcorr',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': -203.49659173189912,
         'posy': 142.59615187052788,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'is_in_error_state': False,
                'is_user_application': False,
                'lazy': True,
                'port_hide_changed': set([]),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'is_in_error_state': False,
                 'is_user_application': False,
                 'lazy': True,
                 'port_hide_changed': set([]),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, '100'), (1, '0.0'), (2, '1.0')],
   4: [  (1, '10'),
         (2, 'False'),
         (3, 'True'),
         (4, "'none'"),
         (5, '{}'),
         (6, 'True'),
         (7, 'True'),
         (8, "''"),
         (9, "''"),
         (10, "''"),
         (11, "{'num': 1}"),
         (12, "{'legend on': True}"),
         (13, '{}'),
         (  14,
            "{'xmin': None, 'ymin': None, 'type': 'normal', 'ymax': None, 'xmax': None}")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {'position': [-226.0, 60.0], 'userColor': None, 'useUserColor': False},
   3: {'position': [-183.0, 133.0], 'useUserColor': False, 'userColor': None},
   4: {'position': [-203.49659173189912, 142.59615187052788], 'userColor': None, 'useUserColor': False},
   '__in__': {'position': [0, 0], 'userColor': None, 'useUserColor': True},
   '__out__': {'position': [0, 0], 'userColor': None, 'useUserColor': True}},
                             lazy=True,
                             )




pie = CompositeNodeFactory(name='pie',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.pylab.nodes', 'PyLabPie'),
   3: ('openalea.data structure.array', 'array'),
   4: ('openalea.data structure.array', 'array')},
                             elt_connections={163127256: (4, 0, 2, 3), 163127268: (3, 0, 2, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'PyLabPie',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': -267.0,
         'posy': -145.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'array',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': -275.0,
         'posy': -265.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'array',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': -213.0,
         'posy': -265.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'is_in_error_state': False,
                'is_user_application': False,
                'lazy': True,
                'port_hide_changed': set([]),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'is_in_error_state': False,
                 'is_user_application': False,
                 'lazy': True,
                 'port_hide_changed': set([]),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [  (1, 'None'),
         (2, "'crgyb'"),
         (4, '0.59999999999999998'),
         (5, '1.0999999999999996'),
         (6, 'True'),
         (7, 'False'),
         (8, 'None'),
         (9, '1'),
         (10, 'True'),
         (11, "''"),
         (12, "''"),
         (13, "''")],
   3: [(0, "'signed integer (4)'"), (1, '[25, 25, 5, 40, 5]')],
   4: [(0, "'character'"), (1, "['a', 'b', 'c', 'd', 'e']")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {'position': [-267.0, -145.0], 'useUserColor': False, 'userColor': None},
   3: {'position': [-275.0, -265.0], 'useUserColor': False, 'userColor': None},
   4: {'position': [-213.0, -265.0], 'useUserColor': False, 'userColor': None},
   '__in__': {'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             )




boxplot = CompositeNodeFactory(name='boxplot',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.pylab.nodes', 'PyLabRandom'),
   3: ('openalea.pylab.nodes', 'PyLabRandom'),
   4: ('openalea.pylab.nodes', 'PyLabBoxPlot'),
   5: ('openalea.pylab.nodes', 'PyLabRandom')},
                             elt_connections={163127244: (3, 0, 4, 0), 163127256: (5, 0, 4, 0), 163127268: (2, 0, 4, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'PyLabRandom',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': -263.0,
         'posy': 80.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'PyLabRandom',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': -134.0,
         'posy': 79.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'PyLabBoxPlot',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': -215.0,
         'posy': 266.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'PyLabRandom',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': -1.0,
         'posy': 78.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'is_in_error_state': False,
                'is_user_application': False,
                'lazy': True,
                'port_hide_changed': set([]),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'is_in_error_state': False,
                 'is_user_application': False,
                 'lazy': True,
                 'port_hide_changed': set([]),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, '100'), (1, '0.0'), (2, '1.0')],
   3: [(0, '100'), (1, '0.0'), (2, '1.0')],
   4: [  (1, '0'),
         (2, "'circle'"),
         (3, '1'),
         (4, "''"),
         (5, "''"),
         (6, "''"),
         (7, 'True'),
         (8, '1')],
   5: [(0, '100'), (1, '0.0'), (2, '1.0')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {'position': [-263.0, 80.0], 'useUserColor': False, 'userColor': None},
   3: {'position': [-134.0, 79.0], 'useUserColor': False, 'userColor': None},
   4: {'position': [-215.0, 266.0], 'useUserColor': False, 'userColor': None},
   5: {'position': [-1.0, 78.0], 'useUserColor': False, 'userColor': None},
   '__in__': {'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             )




hist = CompositeNodeFactory(name='hist',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.pylab.nodes', 'PyLabHist'),
   3: ('openalea.pylab.nodes', 'PyLabRandom')},
                             elt_connections={163127268: (3, 0, 2, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'PyLabHist',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': -308.0,
         'posy': 24.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'PyLabRandom',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': -289.0,
         'posy': -188.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'is_in_error_state': False,
                'is_user_application': False,
                'lazy': True,
                'port_hide_changed': set([]),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'is_in_error_state': False,
                 'is_user_application': False,
                 'lazy': True,
                 'port_hide_changed': set([]),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [  (1, '10'),
         (2, "'blue'"),
         (3, 'False'),
         (4, 'False'),
         (5, "'bar'"),
         (6, "'mid'"),
         (7, "'vertical'"),
         (8, 'False'),
         (9, 'True'),
         (10, '1'),
         (11, "''"),
         (12, "''"),
         (13, "''"),
         (14, 'True'),
         (15, "{'alpha': 1.0, 'animated': False}")],
   3: [(0, '100'), (1, '0.0'), (2, '1.0')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {'position': [-308.0, 24.0], 'useUserColor': False, 'userColor': None},
   3: {'position': [-289.0, -188.0], 'useUserColor': False, 'userColor': None},
   '__in__': {'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             )




scatter = CompositeNodeFactory(name='scatter',
                             description='',
                             category='visualisation',
                             doc='',
                             inputs=(),
                             outputs=(),
                             elt_factory={},
                             elt_connections={},
                             elt_data={},
                             elt_value={},
                             elt_ad_hoc={},
                             lazy=True,
                             )




loglog = CompositeNodeFactory(name='loglog',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.pylab.nodes', 'PyLabRandom'),
   3: ('openalea.pylab.nodes', 'PyLabLogLog')},
                             elt_connections={142434276: (2, 0, 3, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'PyLabRandom',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': -183.0,
         'posy': -85.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'PyLabLogLog',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': -176.0,
         'posy': 19.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'is_in_error_state': False,
                'is_user_application': False,
                'lazy': True,
                'port_hide_changed': set([]),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'is_in_error_state': False,
                 'is_user_application': False,
                 'lazy': True,
                 'port_hide_changed': set([]),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, '100'), (1, '0.0'), (2, '1.0')],
   3: [  (1, 'None'),
         (2, "'circle'"),
         (3, '10'),
         (4, "'solid'"),
         (5, "'blue'"),
         (6, 'True'),
         (7, 'True'),
         (8, "''"),
         (9, "''"),
         (10, "''"),
         (11, "{'num': 1}"),
         (12, "{'legend on': True}"),
         (13, '{}'),
         (  14,
            "{'xmin': None, 'ymin': None, 'type': 'normal', 'ymax': None, 'xmax': None}")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {'position': [-183.0, -85.0], 'userColor': None, 'useUserColor': False},
   3: {'position': [-176.0, 19.0], 'userColor': None, 'useUserColor': False},
   '__in__': {'position': [0, 0], 'userColor': None, 'useUserColor': True},
   '__out__': {'position': [0, 0], 'userColor': None, 'useUserColor': True}},
                             lazy=True,
                             )




