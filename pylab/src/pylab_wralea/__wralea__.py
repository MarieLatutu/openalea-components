
# This file has been generated at Fri Mar  5 11:20:24 2010

from openalea.core import *


__name__ = 'openalea.pylab'

__editable__ = True
__description__ = 'pylab nodes.'
__license__ = 'CECILL-C'
__url__ = 'http://openalea.gforge.inria.fr/doc/openalea/pylab/doc/_build/html/contents.html'
__alias__ = []
__version__ = '0.8.0'
__authors__ = 'Thomas Cokelaer'
__institutes__ = 'INRIA/CIRAD'
__icon__ = 'icon.png'


__all__ = ['py_pylab_PyLabAbsolute', 'py_pylab_PyLabPlot', 'py_pylab_PyLabHist', 'py_pylab_PyLabRandom', 'py_pylab_PyLabScatter', 'py_pylab_PyLabAcorr', 'tutorial']



py_pylab_PyLabAbsolute = Factory(name='PyLabAbsolute',
                description='pylab.absolute interface.',
                category='visualization, data processing',
                nodemodule='py_pylab',
                nodeclass='PyLabAbsolute',
                inputs=None,
                outputs=None,
                widgetmodule=None,
                widgetclass=None,
               )




py_pylab_PyLabPlot = Factory(name='PyLabPlot',
                description='pylab.plot interface.',
                category='visualization, data processing',
                nodemodule='py_pylab',
                nodeclass='PyLabPlot',
                inputs=None,
                outputs=None,
                widgetmodule=None,
                widgetclass=None,
               )




py_pylab_PyLabHist = Factory(name='PyLabHist',
                description='pylab.hist interface.',
                category='visualization, data processing',
                nodemodule='py_pylab',
                nodeclass='PyLabHist',
                inputs=None,
                outputs=None,
                widgetmodule=None,
                widgetclass=None,
               )




py_pylab_PyLabRandom = Factory(name='PyLabRandom',
                description='pylab.random interface.',
                category='visualization, data processing',
                nodemodule='py_pylab',
                nodeclass='PyLabRandom',
                inputs=None,
                outputs=None,
                widgetmodule=None,
                widgetclass=None,
               )




py_pylab_PyLabScatter = Factory(name='PyLabScatter',
                description='pylab.scatter interface.',
                category='visualization, data processing',
                nodemodule='py_pylab',
                nodeclass='PyLabScatter',
                inputs=None,
                outputs=None,
                widgetmodule=None,
                widgetclass=None,
               )




py_pylab_PyLabAcorr = Factory(name='PyLabAcorr',
                description='pylab.hist interface.',
                category='visualization, data processing',
                nodemodule='py_pylab',
                nodeclass='PyLabAcorr',
                inputs=None,
                outputs=None,
                widgetmodule=None,
                widgetclass=None,
               )




tutorial = CompositeNodeFactory(name='tutorial',
                             description='',
                             category='data processing, visualization',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.pylab', 'PyLabRandom'),
   3: ('openalea.pylab', 'PyLabAcorr'),
   4: ('openalea.pylab', 'PyLabPlot'),
   5: ('openalea.pylab', 'PyLabRandom'),
   6: ('openalea.pylab', 'PyLabRandom'),
   7: ('openalea.pylab', 'PyLabRandom'),
   8: ('openalea.pylab', 'PyLabAbsolute'),
   9: ('openalea.pylab', 'PyLabRandom'),
   10: ('openalea.pylab', 'PyLabHist'),
   11: ('openalea.pylab', 'PyLabScatter'),
   12: ('openalea.pylab', 'PyLabHist')},
                             elt_connections={  135614328: (8, 0, 10, 0),
   135614340: (5, 0, 11, 0),
   135614352: (9, 0, 11, 1),
   135614364: (7, 0, 8, 0),
   135614376: (2, 0, 11, 3),
   135614388: (7, 0, 12, 0),
   135614400: (5, 0, 4, 0),
   135614412: (9, 0, 3, 0),
   135614424: (9, 0, 4, 1),
   135614436: (6, 0, 11, 2)},
                             elt_data={  2: {  'block': False,
         'caption': 'PyLabRandom',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 288.6401364299744,
         'posy': -256.94150474779997,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'PyLabAcorr',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 104.22417316846372,
         'posy': -110.60524499510436,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'PyLabPlot',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': -83.905359133203234,
         'posy': -109.82565562438805,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'PyLabRandom',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': -82.809464086679682,
         'posy': -254.38107182664064,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'PyLabRandom',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 163.14572383937528,
         'posy': -253.75096883447964,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'PyLabRandom',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': -214.82941816356805,
         'posy': -250.98882518119839,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'PyLabAbsolute',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': -164.84435552154977,
         'posy': -165.90786749265652,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'PyLabRandom',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 40.0,
         'posy': -253.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'PyLabHist',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set([]),
          'posx': -102.7322689373179,
          'posy': -50.620182353086044,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': 'PyLabScatter',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set([]),
          'posx': 244.60775335455773,
          'posy': -110.60524499510437,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': 'PyLabHist',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set([]),
          'posx': -313.73603147649794,
          'posy': -111.66875696621111,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'is_in_error_state': False,
                'is_user_application': False,
                'lazy': True,
                'port_hide_changed': set([]),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'is_in_error_state': False,
                 'is_user_application': False,
                 'lazy': True,
                 'port_hide_changed': set([]),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, '100'), (1, '0.0'), (2, '1.0')],
   3: [  (1, '15'),
         (2, 'True'),
         (3, 'False'),
         (4, "''"),
         (5, "''"),
         (6, "''"),
         (7, 'True')],
   4: [  (2, "'dfg df g'"),
         (3, "'diamond marker'"),
         (4, '8.0'),
         (5, "'dashed line style'"),
         (6, "'red'"),
         (7, "'df gdf'"),
         (8, "'g fgd'"),
         (9, "'fg fxg '"),
         (10, 'False')],
   5: [(0, '100'), (1, '0.0'), (2, '1.0')],
   6: [(0, '100'), (1, '1.0'), (2, '100.0')],
   7: [(0, '100'), (1, '0.0'), (2, '1.0')],
   8: [],
   9: [(0, '100'), (1, '0.0'), (2, '1.0')],
   10: [  (1, '15'),
          (2, "''"),
          (3, "''"),
          (4, "''"),
          (5, 'True'),
          (6, 'True'),
          (7, 'False'),
          (8, "'blue'"),
          (9, "'bar'"),
          (10, "'vertical'"),
          (11, "'mid'"),
          (12, 'True')],
   11: [  (4, 'None'),
          (5, "'circle marker'"),
          (6, "'blue'"),
          (7, "''"),
          (8, "''"),
          (9, "''"),
          (10, 'True'),
          (11, '0.5')],
   12: [  (1, '15'),
          (2, "''"),
          (3, "''"),
          (4, "''"),
          (5, 'True'),
          (6, 'True'),
          (7, 'False'),
          (8, "'blue'"),
          (9, "'bar'"),
          (10, "'vertical'"),
          (11, "'mid'"),
          (12, 'True')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {'position': [288.6401364299744, -256.94150474779997], 'useUserColor': False, 'userColor': None},
   3: {'position': [104.22417316846372, -110.60524499510436], 'userColor': None, 'useUserColor': False},
   4: {'position': [-83.905359133203234, -109.82565562438805], 'userColor': None, 'useUserColor': False},
   5: {'position': [-82.809464086679682, -254.38107182664064], 'useUserColor': False, 'userColor': None},
   6: {'position': [163.14572383937528, -253.75096883447964], 'userColor': None, 'useUserColor': False},
   7: {'position': [-214.82941816356805, -250.98882518119839], 'userColor': None, 'useUserColor': False},
   8: {'position': [-164.84435552154977, -165.90786749265652], 'userColor': None, 'useUserColor': False},
   9: {'position': [40.0, -253.0], 'useUserColor': False, 'userColor': None},
   10: {'position': [-102.7322689373179, -50.620182353086044], 'useUserColor': False, 'userColor': None},
   11: {'position': [244.60775335455773, -110.60524499510437], 'userColor': None, 'useUserColor': False},
   12: {'position': [-313.73603147649794, -111.66875696621111], 'userColor': None, 'useUserColor': False},
   '__in__': {'position': [0, 0], 'userColor': None, 'useUserColor': True},
   '__out__': {'position': [0, 0], 'userColor': None, 'useUserColor': True}},
                             lazy=True,
                             )




